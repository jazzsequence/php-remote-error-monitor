; default configuration for php remote_error_monitor module

extension=remote_error_monitor.so
; Whether the extension is globally active or not (overrides remote_error_monitor.event_enabled and remote_error_monitor.*_stats_enabled)
; remote_error_monitor.enabled="1"
; Application identifier, helps identifying which application is being monitored
; remote_error_monitor.application_id="My application"
; Enable the capture of events such as errors, notices, warnings,...
; remote_error_monitor.event_enabled="1"
; Maximum duration in ms a request can take before it gets recorded
; remote_error_monitor.stats_duration_threshold="100"
; Maximum User CPU time in ms a request can take before it gets recorded
; remote_error_monitor.stats_user_cpu_threshold="100"
; Maximum System CPU time in ms a request can take before it gets recorded
; remote_error_monitor.stats_sys_cpu_threshold="10"
; Boolean controlling whether the stacktrace should be stored or not
; remote_error_monitor.store_stacktrace=On
; Boolean controlling whether the ip should be stored or not
; remote_error_monitor.store_ip=On
; Boolean controlling whether the cookies should be stored or not
; remote_error_monitor.store_cookies=On
; Boolean controlling whether the POST variables should be stored or not
; remote_error_monitor.store_post=On
; Maximum recursion depth used when dumping a variable
; NOTE: With today's application complexity, the amount of data collected in stacktraces
; including arguments can lead to several thousands of MiB of memory consumed.
; We recommend increasing this value with care.
; remote_error_monitor.dump_max_depth=1

; HTTP configuration
; Whether to enable the HTTP driver
; remote_error_monitor.http_enabled=On
; Whether to collect stats for the HTTP driver
; remote_error_monitor.http_stats_enabled=On
; Error reporting level specific to the HTTP driver
; remote_error_monitor.http_error_reporting=E_ALL|E_STRICT
; Control which exceptions to collect (0: none exceptions collected, 1: collect uncaught exceptions (default), 2: collect ALL exceptions)
; remote_error_monitor.http_exception_mode=1
; Stores silenced events
; remote_error_monitor.http_process_silenced_events = On
; Server for POSTing events
; remote_error_monitor.http_server=http://localhost
; Client and certificate authority for making the server connection
; remote_error_monitor.http_certificate_authorities=""
; remote_error_monitor.http_client_certificate=""
; remote_error_monitor.http_client_key=""
; Maximum number of characters to include in backtrace (0=unlimited)
; remote_error_monitor.http_max_backtrace_length=0
; Timeout (in ms) for POSTing events
; remote_error_monitor.http_request_timeout=1000

